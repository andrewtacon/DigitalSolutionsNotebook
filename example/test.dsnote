[{"kind":1,"language":"markdown","value":"<u><h1>This is the Digital Solutions Notebook</h1></u>"},{"kind":1,"language":"markdown","value":"<h2>SQL Demonstration</h2>"},{"kind":1,"language":"markdown","value":"Table Creation"},{"kind":2,"language":"sql","value":"CREATE TABLE test (\r\n    id INTEGER  PRIMARY KEY AUTOINCREMENT,\r\n    col1 INTEGER, \r\n    col2 INTEGER\r\n)"},{"kind":2,"language":"sql","value":"CREATE TABLE test2 (\r\n    id INTEGER  PRIMARY KEY AUTOINCREMENT,\r\n    col3 INTEGER, \r\n    col4 INTEGER,\r\n    FOREIGN KEY (col4) REFERENCES test(id)\r\n);"},{"kind":2,"language":"sql","value":"CREATE TABLE test3 (\r\n    id INTEGER,\r\n    col3 INTEGER, \r\n    col4 INTEGER,\r\n    PRIMARY KEY(ID),\r\n    FOREIGN KEY (col4) REFERENCES test2(id)\r\n);\r\nCREATE TABLE test4 (\r\n    id INTEGER,\r\n    col3 INTEGER, \r\n    col4 INTEGER,\r\n    PRIMARY KEY(ID, COL3),\r\n    FOREIGN KEY (col3) REFERENCES test(id)\r\n);"},{"kind":1,"language":"markdown","value":"Single Insert Statement"},{"kind":2,"language":"sql","value":"INSERT INTO test (col1, col2) VALUES (11,111);"},{"kind":1,"language":"markdown","value":"Multiple inserts and error catching."},{"kind":2,"language":"sql","value":"INSERT INTO test (col1, col2) VALUES (22,222);\r\nINSERT INTO test (col1, col2) VALUES (33,333);"},{"kind":2,"language":"sql","value":"INSERT INTO test2 (col3, col4) VALUES (1,1),(2,2);"},{"kind":1,"language":"markdown","value":"Table Creation Using Select"},{"kind":2,"language":"sql","value":"CREATE TABLE test5  AS SELECT col3 FROM test2;"},{"kind":2,"language":"sql","value":"SELECT * FROM test5"},{"kind":1,"language":"markdown","value":"FOREIGN KEYS ENFORCED"},{"kind":2,"language":"sql","value":"INSERT INTO test2 (col3, col4) VALUES (1,4);"},{"kind":1,"language":"markdown","value":"Selection statements"},{"kind":2,"language":"sql","value":"SELECT * FROM test;"},{"kind":2,"language":"sql","value":"SELECT * FROM test2 WHERE col4=1;"},{"kind":1,"language":"markdown","value":"UPDATES"},{"kind":2,"language":"sql","value":"UPDATE test SET col1 = 7 WHERE id =2;"},{"kind":2,"language":"sql","value":"SELECT * FROM test;"},{"kind":1,"language":"markdown","value":"DELETE"},{"kind":2,"language":"sql","value":"DELETE from test2 WHERE id=2;"},{"kind":1,"language":"markdown","value":"SHOW DATABASE STATUS"},{"kind":2,"language":"sql","value":"DUMP"},{"kind":1,"language":"markdown","value":"TABLE JOINS"},{"kind":2,"language":"sql","value":"SELECT test.*, test2.col3, test2.col4 FROM test \r\nJOIN test2 \r\nON test.id = test2.id;"},{"kind":1,"language":"markdown","value":"SAVING THE DATABASE"},{"kind":2,"language":"sql","value":"SAVE temp.db"},{"kind":1,"language":"markdown","value":"CLEAR THE DATABASE"},{"kind":2,"language":"sql","value":"CLEAR"},{"kind":2,"language":"sql","value":"DUMP"},{"kind":1,"language":"markdown","value":"LOAD FROM FILE"},{"kind":2,"language":"sql","value":"LOAD temp.db"},{"kind":2,"language":"sql","value":"DUMP"},{"kind":1,"language":"markdown","value":"Relational Database Schema<br><small>for simple databases like this one anyway</small>"},{"kind":2,"language":"sql","value":"DBDIAGRAM"},{"kind":1,"language":"markdown","value":"Data Dictionary"},{"kind":2,"language":"sql","value":"DICTIONARY"},{"kind":1,"language":"markdown","value":"<h2>P5 JS Demonstration</h2>"},{"kind":1,"language":"markdown","value":"Sketch with mouse interactivity"},{"kind":2,"language":"p5js","value":"\r\nfunction setup() {\r\n  createCanvas(400, 400);\r\n\r\n  console.log('Hello','world');\r\n  console.warn('Hello','world');\r\n  console.error('Hello','world');\r\n}\r\n\r\nfunction draw() {\r\n  if (mouseIsPressed) {\r\n    fill(0);\r\n  } else {\r\n    fill(52);\r\n  }\r\n  ellipse(mouseX, mouseY, 80, 80);\r\n}\r\n"},{"kind":1,"language":"markdown","value":"Sketch loading an image. The <i>loadImage()</i> function is the <u>only</u> load that is implemented in this notebook. There is no sound either. The sound is a limitation of the VSCode development environment."},{"kind":2,"language":"p5js","value":"let img;\r\nlet sound;\r\nfunction preload(){\r\n  img = loadImage('download.jpg');\r\n}\r\n\r\nfunction setup() {\r\n  createCanvas(800,200);\r\n}\r\nfunction draw(){\r\n  image(img, 0, 0);\r\n}"},{"kind":1,"language":"markdown","value":"Executing code in a sketch."},{"kind":2,"language":"p5js","value":"for (let i=0; i<10; i++){\r\n    console.log(i);\r\n}"},{"kind":1,"language":"markdown","value":"You can also run without a <i>setup()</i> or <i>draw()</i> function to create a static image."},{"kind":2,"language":"p5js","value":"circle(100,100,100);\r\nrect(0,0,100,100);"},{"kind":1,"language":"markdown","value":"<h2>HTML Demonstration</h2>"},{"kind":1,"language":"markdown","value":"This is an example of HTML.\r\n\r\nYou can style and also use scripting."},{"kind":2,"language":"html","value":"<style>\r\n     h1 {\r\n          color:red;\r\n     }\r\n</style>\r\n\r\n<h1>Heading 1</h1>\r\n<h2>Heading 1</h2>\r\n<h3>Heading 1</h3>\r\n<h4>Heading 1</h4>\r\n<h5>Heading 1</h5>\r\n<h6>Heading 1</h6>\r\n<img src=\"download.jpg\" />\r\n<img id=\"flipped\" src=\"download.jpg\" />\r\n\r\n<script>\r\n     console.log(document.getElementById('flipped').style.transform = \"scaleY(-1)\");\r\n</script>"},{"kind":1,"language":"markdown","value":"The styling and scripting are in the domain of the document and affect other cells."},{"kind":2,"language":"html","value":"<h1>I'm red as well.</h1>"},{"kind":1,"language":"markdown","value":"<h2>Javascript Demonstration</h2>"},{"kind":1,"language":"markdown","value":"This is an example of straight JS.\r\n\r\nBehind the scenes it appends script tags around the top and bottom of the code.\r\n\r\nThis then runs as a HTML file within this document itself.\r\n\r\nThis means that it's data is within the common scope of this workbook page (along with the HTML cell outputs).\r\n\r\nThus the code in the JavaScript output is persistant between cells (unlike the p5js cells which are encapulated)."},{"kind":2,"language":"javascript","value":"for (let i = 0; i < 5; i++) {\r\n    console.log(i, i ** 2, i ** 3, i ** 4);\r\n}\r\nconsole.log('hello', 'world');\r\nconsole.warn('hello', 'world');\r\nconsole.error('hello', 'world');\r\n"},{"kind":2,"language":"javascript","value":"let x = 5;"},{"kind":2,"language":"javascript","value":"console.log(5*x);"}]